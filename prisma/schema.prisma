generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  name            String?
  email           String   @unique
  role            Role     @default(STUDENT)
  createdAt       DateTime @default(now())
  eventsCreated   Event[]  @relation("UserEvents") // 1-to-many
  attendingEvents Event[]  @relation("EventParticipants") // many-to-many

  accounts         Account[]
  sessions         Session[]
  availabilities   Availability[]
  createdLocations Location[]
}

model Event {
  id           String     @id @default(cuid())
  date         DateTime
  activity     String
  locations    Location[] @relation("EventLocations")
  createdBy    User       @relation("UserEvents", fields: [createdById], references: [id])
  createdById  String
  participants User[]     @relation("EventParticipants") // many-to-many
}

enum Role {
  STUDENT
  ADMIN
}

model Location {
  id          String  @id @default(cuid())
  name        String
  address     String
  createdBy   User    @relation(fields: [createdById], references: [id])
  createdById String
  events      Event[] @relation("EventLocations")
}

model Availability {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  createdAt DateTime @default(now())

  @@unique([userId, date])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
